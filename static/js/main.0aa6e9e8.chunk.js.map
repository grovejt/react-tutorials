{"version":3,"sources":["components/monsters/card-list/cardList.styles.js","components/monsters/card2/card.styles.js","components/monsters/card2/Card.js","components/monsters/card-list/CardList.js","components/monsters/search-box/SearchBox.js","AppMonsters.js","index.js"],"names":["useStyles","makeStyles","theme","cardList","display","gridTemplateColumns","gridGap","margin","width","card","flexDirection","backgroundColor","border","borderRadius","padding","cursor","mozOsxFontSmoothing","backfaceVisibility","transform","transition","Card","props","classes","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","AppMonsters","useState","setMonsters","searchQuery","setSearchQuery","useEffect","a","fetch","response","json","resJson","console","log","fetchFunc","value","event","target","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"2RAEaA,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,SAAU,CACRC,QAAS,OACTC,oBAAqB,kBACrBC,QAAS,OACTC,OAAQ,SACRC,MAAO,YCNER,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CO,KAAM,CACJL,QAAS,OACTM,cAAe,SACfC,gBAAiB,UACjBC,OAAQ,iBACRC,aAAc,MACdC,QAAS,OACTC,OAAQ,UACRC,oBAAqB,YACrBC,mBAAoB,SACpBC,UAAW,gBACXC,WAAY,2BACZ,UAAW,CACTD,UAAW,oBCFFE,EAVF,SAACC,GACZ,IAAMC,EAAUtB,IAChB,OACE,yBAAKuB,UAAWD,EAAQb,MACtB,yBAAKe,IAAI,UAAUC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,4BACtB,gCAAMN,EAAMK,QAAQE,KAApB,KACA,+BAAKP,EAAMK,QAAQG,MAAnB,OCKSC,EAXE,SAACT,GAChB,IAAMC,EAAUtB,IAChB,OACE,yBAAKuB,UAAWD,EAAQnB,UACrBkB,EAAMU,SAASC,KAAI,SAACN,GAAD,OAClB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCL3BQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,2BACEb,UAAU,aACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BCG,MAlCf,WAAwB,IAAD,EACWC,mBAAS,IADpB,mBACdT,EADc,KACJU,EADI,OAEiBD,mBAAS,IAF1B,mBAEdE,EAFc,KAEDC,EAFC,KAyBrB,OArBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,8CADb,cACVC,EADU,gBAEMA,EAASC,OAFf,OAEVC,EAFU,OAGhBR,EAAYQ,GACZC,QAAQC,IAAI,mBAJI,2CAAH,qDAMfC,KACC,CAACV,IAcF,yBAAKnB,UAAU,OACb,gDACA,kBAAC,EAAD,CAAW8B,MAAOX,EAAaP,YAAY,kBAAkBC,aAVjE,SAAwBkB,GACtBX,EAAeW,EAAMC,OAAOF,UAU1B,kBAAC,EAAD,CAAUtB,SAdLA,EAASyB,QAAO,SAAC9B,GAAD,OAAaA,EAAQE,KAAK6B,cAAcC,SAAShB,EAAYe,sBCdxFE,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.0aa6e9e8.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  cardList: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    gridGap: \"20px\",\n    margin: \"0 auto\",\n    width: \"85vw\"\n  }\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: \"#95dada\",\n    border: \"1px solid grey\",\n    borderRadius: \"5px\",\n    padding: \"25px\",\n    cursor: \"pointer\",\n    mozOsxFontSmoothing: \"grayscale\",\n    backfaceVisibility: \"hidden\",\n    transform: \"translateZ(0)\",\n    transition: \"transform 0.25s ease-out\",\n    \"&:hover\": {\n      transform: \"scale(1.05)\"\n    }\n  }\n}));\n","import React from \"react\";\n\nimport { useStyles } from \"./card.styles\";\n\nconst Card = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.card}>\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n      <h2> {props.monster.name} </h2>\n      <p> {props.monster.email} </p>\n    </div>\n  );\n};\nexport default Card;\n","import React from \"react\";\nimport { useStyles } from \"./cardList.styles\";\nimport Card from \"../card2/Card\";\n\nconst CardList = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.cardList}>\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nimport \"./searchBox.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search-box\"\n    type=\"search\" //\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/monsters/card-list/CardList\";\nimport { SearchBox } from \"./components/monsters/search-box/SearchBox\";\n\nfunction AppMonsters() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchFunc = async () => {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users`);\n      const resJson = await response.json();\n      setMonsters(resJson);\n      console.log(\"useEffect fired\");\n    };\n    fetchFunc();\n  }, [searchQuery]);\n\n  const getMonsters = () => {\n    return monsters.filter((monster) => monster.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  };\n\n  function onSearchChange(event) {\n    setSearchQuery(event.target.value);\n  }\n  // const onSearchChange = (event) => {\n  //   setSearchQuery(event.target.value);\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox value={searchQuery} placeholder=\"search monsters\" handleChange={onSearchChange} />\n      <CardList monsters={getMonsters()} />\n    </div>\n  );\n}\n\nexport default AppMonsters;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppMonsters from \"./AppMonsters\";\n// import AppHooks from \"./AppHooks\";\n\nReactDOM.render(<AppMonsters />, document.getElementById(\"root\"));\n// ReactDOM.render(<AppHooks />, document.getElementById(\"root\"));\n"],"sourceRoot":""}